Index: GUI/src/main/java/com/example/gui/TetrisController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.gui;\r\n\r\nimport Spiellogik.*;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Menu;\r\nimport javafx.scene.input.KeyCode;\r\nimport javafx.scene.input.KeyEvent;\r\nimport javafx.scene.layout.GridPane;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\n\r\npublic class TetrisController {\r\n    @FXML\r\n    private GridPane gridPane;\r\n    private StartGame game;\r\n    private Button[][] gridButtons;\r\n    MenuController menuController;\r\n    Stage stage;\r\n    private Scene scene;\r\n    private Parent root;\r\n\r\n    public void initialize() {\r\n        game = new StartGame(10, 14);\r\n        gridButtons = new Button[14][10];\r\n        gridPane.getRowConstraints().clear();\r\n        gridPane.getColumnConstraints().clear();\r\n        for (int i = 0; i < 14; i++) {\r\n            for (int j = 0; j < 10; j++) {\r\n                Button button = new Button();\r\n                button.setPrefSize(30, 30);\r\n                gridPane.add(button, j, i);\r\n                gridButtons[i][j] = button;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private void updateGrid() {\r\n        boolean[][] board = game.convertToBooleanArray();\r\n\r\n        for (int i = 0; i < 14; i++) {\r\n            for (int j = 0; j < 10; j++) {\r\n                if (board[i][j]) {\r\n                    gridButtons[i][j].setStyle(\"-fx-background-color: #000000;\");\r\n                } else {\r\n                    gridButtons[i][j].setStyle(\"-fx-background-color: #FFFFFF;\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    @FXML\r\n    public void startGame() {\r\n            game.play();\r\n            updateGrid();\r\n    }\r\n    public void singlePlayer(ActionEvent e) throws IOException {\r\n        System.out.println(\"Singleplayer\");\r\n        FXMLLoader loader = new FXMLLoader(getClass().getResource(\"singleplayer.fxml\"));\r\n        root = loader.load();\r\n        stage = (Stage) ((Node) e.getSource()).getScene().getWindow();\r\n        scene = new Scene(root, stage.getWidth(), stage.getHeight());\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n    @FXML\r\n    void backToSingleplayer(KeyEvent event) throws IOException {\r\n        if(event.getCode() == KeyCode.ESCAPE){\r\n            System.out.println(\"Escape pressed!\");\r\n            FXMLLoader loader = new FXMLLoader(getClass().getResource(\"singleplayer.fxml\"));\r\n            root = loader.load();\r\n            stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n            scene = new Scene(root, stage.getWidth(), stage.getHeight());\r\n            stage.setScene(scene);\r\n            stage.show();\r\n        }\r\n    }\r\n    public void rotate(ActionEvent event) {\r\n        System.out.println(\"Rotate!\");\r\n        game.turn(game.gameboard);\r\n        updateGrid();\r\n\r\n    }\r\n    public void moveRight(ActionEvent event)  {\r\n        System.out.println(\"Right!\");\r\n        game.goRight();\r\n        updateGrid();\r\n    }\r\n\r\n    public void moveLeft(ActionEvent event) {\r\n        System.out.println(\"Left!\");\r\n        game.goLeft();\r\n        updateGrid();\r\n    }\r\n\r\n    public void dropTet(ActionEvent event) {\r\n        System.out.println(\"Drop!\");\r\n        game.drop();\r\n        updateGrid();\r\n    }\r\n\r\n}\r\n
===================================================================
diff --git a/GUI/src/main/java/com/example/gui/TetrisController.java b/GUI/src/main/java/com/example/gui/TetrisController.java
--- a/GUI/src/main/java/com/example/gui/TetrisController.java	
+++ b/GUI/src/main/java/com/example/gui/TetrisController.java	
@@ -104,5 +104,6 @@
         game.drop();
         updateGrid();
     }
+    
 
 }
Index: GUI/src/main/java/Spiellogik/StartGame.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Spiellogik;\r\n\r\nimport java.util.concurrent.Executors;\r\nimport java.util.concurrent.ScheduledExecutorService;\r\nimport java.util.concurrent.TimeUnit;\r\nimport java.util.Random;\r\n\r\npublic class StartGame {\r\n    public BoardStatus[][] gameboard;\r\n    public boolean isGameOver;\r\n    private Tetromino tet;\r\n    private ScheduledExecutorService scheduler = Executors.newSingleThreadScheduledExecutor();\r\n    private Tetromino next_tet;\r\n    private int points;\r\n\r\n    public StartGame(int length, int height){\r\n        this.gameboard = new BoardStatus[height][length];\r\n        this.isGameOver = false;\r\n        this.tet = randomTet();\r\n        this.next_tet = randomTet();\r\n        this.points = 0;\r\n        for(int i = 0; i < gameboard.length; i++){\r\n            for (int j = 0; j < gameboard[i].length; j++){\r\n                gameboard[i][j] = BoardStatus.AIR;\r\n            }\r\n        }\r\n        this.setTet();\r\n    }\r\n    public Tetromino randomTet(){\r\n        Random rand = new Random();\r\n        int random_int = rand.nextInt(7);\r\n\r\n        switch (random_int){\r\n            case 0:\r\n                return new TeeWee();\r\n            case 1:\r\n                return new BRicky();\r\n            case 2:\r\n                return new Hero();\r\n            case 3:\r\n                return new OrangeRicky();\r\n            case 4:\r\n                return new RhodeIslandZ();\r\n            case 5:\r\n                return new SmashBoy();\r\n            case 6:\r\n                return new CleveLandZ();\r\n            default:\r\n                return new Hero();\r\n        }\r\n\r\n    }\r\n    public void removeTet (){\r\n        Coords [] coords = this.tet.getCoords();\r\n        for (int i = 0; i < coords.length; i++) {\r\n            if (coords[i].getX() >= 0 && coords[i].getX() <= this.gameboard.length) {\r\n                if (coords[i].getY() >= 0 && coords[i].getY() <= this.gameboard[0].length) {\r\n                    gameboard[coords[i].getX()][coords[i].getY()] = BoardStatus.AIR;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public void setTet (){\r\n        Coords [] coords = this.tet.getCoords();\r\n        for (int i = 0; i < coords.length; i++){\r\n            if(coords[i].getX() >= 0 && coords[i].getX() <= this.gameboard.length){\r\n                if (coords[i].getY() >= 0 && coords[i].getY() <= this.gameboard[0].length){\r\n                    gameboard[coords[i].getX()][coords[i].getY()] = BoardStatus.PLAYER;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public void goRight(){\r\n        this.removeTet();\r\n        this.tet.goRight();\r\n        this.setTet();\r\n        this.isOnGround();\r\n    }\r\n\r\n    public void goLeft(){\r\n        this.removeTet();\r\n        this.tet.goLeft();\r\n        this.setTet();\r\n        this.isOnGround();\r\n    }\r\n\r\n    public void drop(){\r\n        this.removeTet();\r\n        this.tet.drop();\r\n        this.setTet();\r\n        this.isOnGround();\r\n    }\r\n\r\n    public void turn( BoardStatus[][] gameboard){\r\n        this.removeTet();\r\n        this.tet.turn(gameboard);\r\n        this.setTet();\r\n        this.isOnGround();\r\n    }\r\n\r\n    public void tetFall(StartGame a){\r\n        //scheduler = Executors.newSingleThreadScheduledExecutor();\r\n\r\n        scheduler.scheduleAtFixedRate(new Runnable(){\r\n            public void run() {\r\n                Random rand = new Random();\r\n                int counter = rand.nextInt(4);\r\n\r\n                if (!a.tet.getOn_ground()) {\r\n                    a.drop();\r\n                    System.out.println(a);\r\n                    if (counter == 0 && !a.tet.getOn_ground()){\r\n                        a.turn(a.gameboard);\r\n                        System.out.println(a);\r\n                    } else if (counter == 1 && !a.tet.getOn_ground()){\r\n                        a.drop();\r\n                        System.out.println(a);\r\n                    } else if (counter == 2 && !a.tet.getOn_ground()){\r\n                        a.goLeft();\r\n                        System.out.println(a);\r\n                    } else if (counter == 3 && !a.tet.getOn_ground()){\r\n                        a.goRight();\r\n                        System.out.println(a);\r\n                    }\r\n\r\n\r\n                } else if (!a.isGameOver){\r\n                    a.tet = next_tet;\r\n                    a.setTet();\r\n                    System.out.println(a);\r\n                    a.next_tet = randomTet();\r\n                } else {\r\n                    scheduler.shutdown();\r\n                    System.out.println(\"GAME OVER\");\r\n                }\r\n\r\n            }\r\n        }, 0, 2000, TimeUnit.MILLISECONDS);\r\n\r\n    }\r\n\r\n\r\n    public String toString(){\r\n        String end = \"\";\r\n        for(int i = 0; i < this.gameboard.length; i++){\r\n            for (int j = 0; j < this.gameboard[i].length; j++){\r\n                if(this.gameboard[i][j] == BoardStatus.SET){\r\n                    end += \"1\";\r\n                } else if (this.gameboard[i][j] == BoardStatus.AIR){\r\n                    end += \"0\";\r\n                } else {\r\n                    end += \"2\";\r\n                }\r\n            }\r\n            end += \"\\n\";\r\n        }\r\n        return end;\r\n    }\r\n\r\n    /**\r\n     * Method checks if a given row is full\r\n     * @param int row: to check the row where the Tetromino is placed, migth consider multiple rows depending on Tetromino\r\n     * @return boolean: true if row full, false if not\r\n     * @version 02.07.2023\r\n     * */\r\n    public boolean FullRow (int row) {\r\n        //Coords[] coords = this.tet.getCoords();\r\n\r\n        for(int i = 0; i < this.gameboard[row].length; i++) {\r\n            if(this.gameboard[row][i] == BoardStatus.AIR) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Method removes the row if its full by dragging every row above 1 row down\r\n     * row 0 has to be manually changed cause theres no row above to be dragged. Row 0 is always empty if TETRIS happens.\r\n     * @param int row: to check the row where the Tetromino is placed, migth consider multiple rows depending on Tetromino\r\n     * @return void\r\n     * @version 02.07.2023\r\n     * */\r\n    public void removeRow(int row ) {\r\n        if(this.FullRow(row))  {\r\n            points += 40;\r\n            for(int i = row; i > 0; i--) {\r\n                for(int j = 0; j < this.gameboard[row].length; j++) {\r\n                    this.gameboard[i][j] = this.gameboard[i - 1] [j];\r\n                }\r\n            }\r\n\r\n            for( int k = 0; k < this.gameboard[0].length;k++) {\r\n                this.gameboard[0][k] = BoardStatus.AIR;\r\n            }\r\n        }\r\n\r\n    }\r\n    public void isOnGround(){\r\n        Coords[] coords = this.tet.getCoords();\r\n        for (int i = 0; i < coords.length; i++){\r\n            if (coords[i].getX() == 13 || this.gameboard[coords[i].getX() + 1][coords[i].getY()] == BoardStatus.SET){\r\n                this.tet.setOn_ground(true);\r\n                this.tetOnGround();\r\n            }\r\n        }\r\n    }\r\n\r\n    public void tetOnGround(){\r\n        Coords[] coords = this.tet.getCoords();\r\n        for (int i = 0; i < coords.length; i++){\r\n            this.gameboard[coords[i].getX()][coords[i].getY()] = BoardStatus.SET;\r\n        }\r\n        this.isGameOver();\r\n\r\n    }\r\n    public void isGameOver(){\r\n        for(int i = 0; i < this.gameboard[0].length; i++){\r\n            if(this.gameboard[1][i] == BoardStatus.SET){\r\n                this.isGameOver = true;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    public void play(){\r\n        System.out.println(this);\r\n        tetFall(this);\r\n        while(!this.isGameOver){\r\n            if(!this.isGameOver){\r\n                break;\r\n            }\r\n        }\r\n        System.out.println(\"Wieso steht das hier ganz oben im Terminal?\"); // ehrlich wieso\r\n\r\n    }\r\n    public boolean[][] convertToBooleanArray() {\r\n        boolean[][] res = new boolean[14][10];\r\n        for (int i = 0; i < this.gameboard.length; i++) {\r\n            for (int j = 0; j < this.gameboard[i].length; j++) {\r\n                if (this.gameboard[i][j] == BoardStatus.AIR) {\r\n                    res[i][j] = false;\r\n                } else {\r\n                    res[i][j] = true;\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n}\r\n
===================================================================
diff --git a/GUI/src/main/java/Spiellogik/StartGame.java b/GUI/src/main/java/Spiellogik/StartGame.java
--- a/GUI/src/main/java/Spiellogik/StartGame.java	
+++ b/GUI/src/main/java/Spiellogik/StartGame.java	
@@ -111,21 +111,6 @@
                 if (!a.tet.getOn_ground()) {
                     a.drop();
                     System.out.println(a);
-                    if (counter == 0 && !a.tet.getOn_ground()){
-                        a.turn(a.gameboard);
-                        System.out.println(a);
-                    } else if (counter == 1 && !a.tet.getOn_ground()){
-                        a.drop();
-                        System.out.println(a);
-                    } else if (counter == 2 && !a.tet.getOn_ground()){
-                        a.goLeft();
-                        System.out.println(a);
-                    } else if (counter == 3 && !a.tet.getOn_ground()){
-                        a.goRight();
-                        System.out.println(a);
-                    }
-
-
                 } else if (!a.isGameOver){
                     a.tet = next_tet;
                     a.setTet();
@@ -137,7 +122,7 @@
                 }
 
             }
-        }, 0, 2000, TimeUnit.MILLISECONDS);
+        }, 0, 1000, TimeUnit.MILLISECONDS);
 
     }
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"220209df-59ba-4661-a75c-f0da5ee61152\" name=\"Changes\" comment=\"GUI is connected to the logic\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_07_2023_20_37_[Changes]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_07_2023_20_37__Changes_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/GUI/src/main/java/Spiellogik/StartGame.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/GUI/src/main/java/Spiellogik/StartGame.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/GUI/src/main/java/com/example/gui/TetrisController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/GUI/src/main/java/com/example/gui/TetrisController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/GUI/src/main/resources/com/example/gui/play_single.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/GUI/src/main/resources/com/example/gui/play_single.fxml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"GUI\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2RhaPoz6u0Vwd8QMbu3APuiNRgJ\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/Tetris/11/GUI&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Tetris\\11\\GUI\" />\r\n      <recent name=\"D:\\Tetris\\11\\GUI\\src\\main\\resources\\com\\example\\gui\" />\r\n      <recent name=\"D:\\Tetris\\11\\GUI\\src\\main\\resources\\image\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Tetris\\11\\GUI\\src\\main\\java\" />\r\n      <recent name=\"D:\\Tetris\\11\\GUI\\src\\main\\resources\\com\\example\\gui\" />\r\n      <recent name=\"D:\\Tetris\\11\\GUI\\src\\main\\java\\com\\example\\gui\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"220209df-59ba-4661-a75c-f0da5ee61152\" name=\"Changes\" comment=\"\" />\r\n      <created>1687704753734</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1687704753734</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"GUI\">\r\n      <created>1687717747296</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1687717747296</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"GUI\">\r\n      <created>1687717760384</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1687717760384</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"GUI update\">\r\n      <created>1687723993468</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1687723993469</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"GUI update\">\r\n      <created>1687726837220</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1687726837220</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"GUI update\">\r\n      <created>1687731381465</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1687731381465</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"GUI update\">\r\n      <created>1688311653493</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1688311653493</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Exit update for multi- and singleplayer\">\r\n      <created>1688314882865</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1688314882865</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"New icon image, exit buttons for singleplayer and multiplayer\">\r\n      <created>1688322923045</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1688322923045</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"New color for some buttons\">\r\n      <created>1688323496733</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1688323496733</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"New color for some buttons\">\r\n      <created>1688327367726</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1688327367726</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"GUI is connected to the logic\">\r\n      <created>1688850883851</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1688850883851</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"12\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"origin/GUI\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"GUI\" />\r\n    <MESSAGE value=\"GUI update\" />\r\n    <MESSAGE value=\"Exit update for multi- and singleplayer\" />\r\n    <MESSAGE value=\"New icon image, exit buttons for singleplayer and multiplayer\" />\r\n    <MESSAGE value=\"New color for some buttons\" />\r\n    <MESSAGE value=\"GUI is connected to the logic\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"GUI is connected to the logic\" />\r\n  </component>\r\n</project>
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -5,12 +5,14 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="220209df-59ba-4661-a75c-f0da5ee61152" name="Changes" comment="GUI is connected to the logic">
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_07_2023_20_37_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_07_2023_20_37__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_07_2023_20_36__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_02_07_2023_20_36__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_07_07_2023_14_27__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_07_07_2023_14_27__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_07_07_2023_14_27__Changes_2.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_07_07_2023_14_27__Changes_2.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_07_07_2023_14_17__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_07_07_2023_14_17__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_07_07_2023_14_27__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_07_07_2023_14_27__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/GUI/src/main/java/Spiellogik/StartGame.java" beforeDir="false" afterPath="$PROJECT_DIR$/GUI/src/main/java/Spiellogik/StartGame.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/GUI/src/main/java/com/example/gui/TetrisController.java" beforeDir="false" afterPath="$PROJECT_DIR$/GUI/src/main/java/com/example/gui/TetrisController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/GUI/src/main/resources/com/example/gui/play_single.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/GUI/src/main/resources/com/example/gui/play_single.fxml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
